[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 8 products, 2 sources, 2 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/Day1.scala, ${BASE}/src/main/scala/Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/main/scala/Day1.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/Day1.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(day1, Day1Solution, Day1$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(day1, Day1Solution, Day1$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/Day1.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: day1, Day1Solution, Day1$package[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /home/theme/study/aoc2024/aoc-2024-scala/target/scala-3.3.1/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: /home/theme/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-sbt-bridge/3.3.1/scala3-sbt-bridge-3.3.1.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 5ff69f3e for Scala Compiler version 3.3.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/theme/study/aoc2024/aoc-2024-scala/target/scala-3.3.1/classes:/home/theme/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.3.1/scala3-library_3-3.3.1.jar:/home/theme/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.10/scala-library-2.13.10.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.489185178 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Day1Solution...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Day1Solution[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Day1Solution)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Day1Solution,ModifiedNames(changes = UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(Day1Solution;init;$,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(Day1Solution,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(Object;init;,[Default]), UsedName(solve,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(calculateTotalDistance,[Default]), UsedName(ne,[Default]), UsedName(parseInput,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The Day1Solution has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(Day1Solution;init;$,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(Day1Solution,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(Object;init;,[Default]), UsedName(solve,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(calculateTotalDistance,[Default]), UsedName(ne,[Default]), UsedName(parseInput,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Day1Solution)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Day1...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Day1[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Day1)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Day1,ModifiedNames(changes = UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(Object;init;,[Default]), UsedName(solve,[Default]), UsedName(Day1,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(calculateTotalDistance,[Default]), UsedName(ne,[Default]), UsedName(parseInput,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(Day1;init;$,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The Day1 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(Object;init;,[Default]), UsedName(solve,[Default]), UsedName(Day1,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(calculateTotalDistance,[Default]), UsedName(ne,[Default]), UsedName(parseInput,[Default]), UsedName(eq,[Default]), UsedName(##,[Default]), UsedName(Day1;init;$,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Day1)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: day1, Day1Solution, Day1$package, Day1[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated macros due to upstream dependencies change: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
